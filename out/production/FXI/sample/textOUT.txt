
ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[[open(var_f, C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt) , read(var_c, var_f)] , [if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]]

SymTable


Out


FileTable


Heap:




ExeStack:

[open(var_f, C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt) , read(var_c, var_f)]
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable


Out


FileTable


Heap:




ExeStack:

[open(var_f, C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt) , read(var_c, var_f)]
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable


Out


FileTable


Heap:




ExeStack:

open(var_f, C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt)
read(var_c, var_f)
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable


Out


FileTable


Heap:




ExeStack:

open(var_f, C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt)
read(var_c, var_f)
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable


Out


FileTable


Heap:




ExeStack:

read(var_c, var_f)
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable

var_f-->0


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

read(var_c, var_f)
[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable

var_f-->0


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

[if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ; , close(var_f)]

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ;
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

if(var_c) then([read(var_c, var_f) , print(var_c);])else(print(0);) ;
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

[read(var_c, var_f) , print(var_c);]
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

[read(var_c, var_f) , print(var_c);]
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

read(var_c, var_f)
print(var_c);
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

read(var_c, var_f)
print(var_c);
close(var_f)

SymTable

var_f-->0

var_c-->4


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

print(var_c);
close(var_f)

SymTable

var_f-->0

var_c-->5


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

print(var_c);
close(var_f)

SymTable

var_f-->0

var_c-->5


Out


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

close(var_f)

SymTable

var_f-->0

var_c-->5


Out

5


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:

close(var_f)

SymTable

var_f-->0

var_c-->5


Out

5


FileTable

0-->C:\Users\Nitu\Desktop\FXI\src\sample\textIN.txt


Heap:




ExeStack:


SymTable

var_f-->0

var_c-->5


Out

5


FileTable


Heap:




ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:


SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:


SymTable

a-->2

v-->32


Out

10

22

32

30


FileTable


Heap:

2-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:


SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:


SymTable

a-->2

v-->32


Out

10

22

32

30


FileTable


Heap:

2-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10


FileTable


Heap:

2-->22




ExeStack:


SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->10


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:

print(heapReading(a));

SymTable

a-->2

v-->32


Out

10

22

32


FileTable


Heap:

2-->30




ExeStack:


SymTable

a-->2

v-->32


Out

10

22

32

30


FileTable


Heap:

2-->30




ExeStack:

[a=2+3*5;  , [b=a+1;  , print(b);]]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=2+3*5; 
[b=a+1;  , print(b);]

SymTable


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

[b=a+1;  , print(b);]

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

b=a+1; 
print(b);

SymTable

a-->17


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->17

b-->18


Out


FileTable


Heap:




ExeStack:


SymTable

a-->17

b-->18


Out

18


FileTable


Heap:




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->32


Out

10

22

32


FileTable


Heap:

1-->30




ExeStack:


SymTable

a-->1

v-->32


Out

10

22

32

30


FileTable


Heap:

1-->30




ExeStack:

[[v=10;  , NewH(a, 22)] , [fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , NewH(a, 22)]
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

NewH(a, 22)
[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]) , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

fork([[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]])
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[[heapWriting(a,30) , v=32; ] , [print(v); , print(heapReading(a));]]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(v);
print(heapReading(a));

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

[heapWriting(a,30) , v=32; ]
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

print(heapReading(a));

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:

heapWriting(a,30)
v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10


FileTable


Heap:

1-->22




ExeStack:


SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

v=32; 
[print(v); , print(heapReading(a));]

SymTable

a-->1

v-->10


Out

10

22


FileTable


Heap:

1-->30




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:


SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:


SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:


SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11

12


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v=3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v=3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1

1


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out

1

1

1


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

4

1

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

1

2

2

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

1

2

2

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

1

2

2

3

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

1

2

2

3

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

1

2

2

3

4

5

5

6

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

1

2

2

3

4

5

5

6

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->10


Out

1

2

2

3

4

5

5

6

7

8

8

9

10


FileTable


Heap:




ExeStack:


SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->11


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11


FileTable


Heap:




ExeStack:


SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11


FileTable


Heap:




ExeStack:


SymTable

v-->12


Out

1

2

2

3

4

5

5

6

7

8

8

9

10

100

11

11

12


FileTable


Heap:




ExeStack:

[[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])] , [sleep(10) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8

80


FileTable


Heap:




ExeStack:

[[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])] , [sleep(10) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8

80


FileTable


Heap:




ExeStack:

[[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])] , [sleep(10) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

8

100


FileTable


Heap:




ExeStack:

[[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])] , [sleep(10) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[v=10;  , fork([v=v-1;  , [v=v-1;  , print(v);]])]
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=10; 
fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

fork([v=v-1;  , [v=v-1;  , print(v);]])
[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[sleep(10) , print(v*10);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , [v=v-1;  , print(v);]]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(10)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
[v=v-1;  , print(v);]

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(9)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

[v=v-1;  , print(v);]

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(8)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

v=v-1; 
print(v);

SymTable

v-->9


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(7)
print(v*10);

SymTable

v-->10


Out


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

8


FileTable


Heap:




ExeStack:

sleep(6)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(5)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(4)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(3)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(2)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(1)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

sleep(0)
print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

8


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

8

100


FileTable


Heap:




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:


SymTable

v-->-1


Out

0


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

0

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

0

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

0

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->3


Out

0

1

2


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->2


Out

0

1

2


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->3


Out

0

1

2


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->2


Out

0

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

1

2

30


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

1

2

30


FileTable


Heap:




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30

400


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v3))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v3))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30

400


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]] , [Await(cnt) , print(2000);]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])
[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(2000);]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v3,heapReading(v3)*10)]
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(2000);

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->3

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

heapWriting(v3,heapReading(v3)*10)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

2000

30

400


FileTable


Heap:

1-->20

2-->30

3-->400




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([[Await(cnt) , heapWriting(v3,heapReading(v3)*10)] , [heapWriting(v3,heapReading(v3)*10) , print(heapReading(v3));]])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4

30


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , Await(cnt)]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

20

4

30


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]) , [fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)])
[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]) , fork([Await(cnt) , print(heapReading(v3));])]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[print(heapReading(v1)); , Await(cnt)] , heapWriting(v1,heapReading(v1)*10)]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]])
fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , Await(cnt)]
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , print(heapReading(v3));])

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v1));
Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

2

4

30


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]] , [Await(cnt) , print(heapReading(v3));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));])
fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));])
fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v1,heapReading(v1)*10)]
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v1,heapReading(v1)*10)]
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)]
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)]
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20

300


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

40

3

4

1

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(cnt);] , [CountDown(cnt) , print(cnt);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(cnt);]
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);
[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(cnt);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(cnt);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

1

1


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]] , [Await(cnt) , print(heapReading(v3));]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]] , [fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , newBarrier(cnt,heapReading(v2))]
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

newBarrier(cnt,heapReading(v2))
[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]) , fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])]
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));])
fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));])
fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]])
[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[Await(cnt) , heapWriting(v1,heapReading(v1)*10)] , print(heapReading(v1));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v1,heapReading(v1)*10)]
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , print(heapReading(v3));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , heapWriting(v1,heapReading(v1)*10)]
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[Await(cnt) , [[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

Await(cnt)
[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

print(heapReading(v3));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)] , print(heapReading(v2));]

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)]
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , heapWriting(v2,heapReading(v2)*10)]
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:

print(heapReading(v2));

SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:


SymTable

cnt-->0

v1-->1

v2-->2

v3-->3


Out

4

20

300


FileTable


Heap:

1-->20

2-->300

3-->4




ExeStack:

[v=0;  , [repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=0; 
[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3) , print(v*10);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

repeat([fork([print(v); , v=v-1; ]) , v=v+1; ]) untill(v==3)
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([print(v); , v=v-1; ]) , v=v+1; ] , While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}]
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:


SymTable

v-->-1


Out

0


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

0

1


FileTable


Heap:




ExeStack:

[fork([print(v); , v=v-1; ]) , v=v+1; ]
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->1


Out

0

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out

0

1


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])
v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

While(NotExp(v==3)){[fork([print(v); , v=v-1; ]) , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

1


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable

v-->2


Out

0

1


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->3


Out

0

1

2


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->2


Out

0

1

2


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->3


Out

0

1

2


FileTable


Heap:




ExeStack:

v=v-1; 

SymTable

v-->2


Out

0

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

1

2

30


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

1

2

30


FileTable


Heap:




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10

10


FileTable


Heap:




ExeStack:

[v=20;  , [for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

v=20; 
[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]} , print(v*10);]

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

for(v=0; ;v<10;v=v+1; ){[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

[v=0;  , While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}]
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

v=0; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->20


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->0


Out

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->0


Out

0

0


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->1


Out

0

0

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:


SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->1


Out

0

0

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->1


Out

0

0

1

1

1

1


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:


SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->2


Out

0

0

1

1

1

1

2

2

2

2


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:


SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->3


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:


SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->4


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:


SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->5


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:


SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->6


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:


SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->7


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:


SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])]
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->8


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:


SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

fork([[print(v); , v=1+v; ] , print(v);])
v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

v=v+1; 
While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[[print(v); , v=1+v; ] , print(v);]

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

While(v<10){[[fork([[print(v); , v=1+v; ] , print(v);]) , fork([[print(v); , v=1+v; ] , print(v);])] , v=v+1; ]}
print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

[print(v); , v=1+v; ]
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v*10);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:

print(v);
v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:

v=1+v; 
print(v);

SymTable

v-->9


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:

print(v);

SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10


FileTable


Heap:




ExeStack:


SymTable

v-->10


Out

0

0

1

1

1

1

2

2

2

2

3

3

3

3

4

4

4

4

5

5

5

5

6

6

6

6

7

7

7

7

8

8

8

8

9

9

9

100

9

10

10


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , [c=null?null:null , print(c);]] , [c=null?null:null , print(c);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=null?null:null , print(c);]]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=null?null:null , print(c);]]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=null?null:null
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=null?null:null
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(null==0) then(c=null; )else(c=null; ) ;
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(null==0) then(c=null; )else(c=null; ) ;
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , [c=null?null:null , print(c);]] , [c=null?null:null , print(c);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=null?null:null , print(c);]]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=null?null:null , print(c);]]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

[c=null?null:null , print(c);]
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=null?null:null
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=null?null:null
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(null) then(c=null; )else(c=null; ) ;
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(null) then(c=null; )else(c=null; ) ;
print(c);
[c=null?null:null , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , [c=a?100:200 , print(c);]] , [c=b-2?100:200 , print(c);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=a?100:200 , print(c);]]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , [c=a?100:200 , print(c);]]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

b=2; 
[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

[c=a?100:200 , print(c);]
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=a?100:200
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=a?100:200
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(a) then(c=100; )else(c=200; ) ;
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

if(a) then(c=100; )else(c=200; ) ;
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=100; 
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=100; 
print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2

c-->100


Out


FileTable


Heap:




ExeStack:

print(c);
[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2

c-->100


Out


FileTable


Heap:




ExeStack:

[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

[c=b-2?100:200 , print(c);]

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

c=b-2?100:200
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

c=b-2?100:200
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

if(b-2) then(c=100; )else(c=200; ) ;
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

if(b-2) then(c=100; )else(c=200; ) ;
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

c=200; 
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

c=200; 
print(c);

SymTable

a-->1

b-->2

c-->100


Out

100


FileTable


Heap:




ExeStack:

print(c);

SymTable

a-->1

b-->2

c-->200


Out

100


FileTable


Heap:




ExeStack:

print(c);

SymTable

a-->1

b-->2

c-->200


Out

100


FileTable


Heap:




ExeStack:


SymTable

a-->1

b-->2

c-->200


Out

100

200


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable


Out


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , c=5; ] , switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , c=5; ]
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , c=5; ]
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable


Out


FileTable


Heap:




ExeStack:

b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:

print(b);

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:


SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

[[[[a=1;  , b=2; ] , c=5; ] , switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)] , [switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , c=5; ] , switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[[a=1;  , b=2; ] , c=5; ] , switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , c=5; ]
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[[a=1;  , b=2; ] , c=5; ]
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

b=2; 
c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1


Out


FileTable


Heap:




ExeStack:

c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

c=5; 
switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(b);
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:

print(b);
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

print(a);
print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

print(a);
print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2

1


FileTable


Heap:




ExeStack:

print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2

1


FileTable


Heap:




ExeStack:

print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2

1

2


FileTable


Heap:




ExeStack:

print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2

1

2


FileTable


Heap:




ExeStack:


SymTable

a-->1

b-->2

c-->5


Out

1

2

1

2

300


FileTable


Heap:




ExeStack:

[[c=5;  , [a=1;  , b=2; ]] , [switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]]

SymTable


Out


FileTable


Heap:




ExeStack:

[c=5;  , [a=1;  , b=2; ]]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[c=5;  , [a=1;  , b=2; ]]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

c=5; 
[a=1;  , b=2; ]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

c=5; 
[a=1;  , b=2; ]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

c-->5


Out


FileTable


Heap:




ExeStack:

[a=1;  , b=2; ]
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

c-->5


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

c-->5


Out


FileTable


Heap:




ExeStack:

a=1; 
b=2; 
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

c-->5


Out


FileTable


Heap:




ExeStack:

b=2; 
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

c-->5


Out


FileTable


Heap:




ExeStack:

b=2; 
[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

c-->5


Out


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);) , print(300);]

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

switch(a*10)(case a*10:[print(a); , print(b);])(case b*c:[print(100); , print(200);](default: print(300);)
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

if(a*10==b*c) then([print(a); , print(b);])else(if(a*10==10) then([print(100); , print(200);])else(print(300);) ;) ;
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

[print(a); , print(b);]
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(a);
print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out


FileTable


Heap:




ExeStack:

print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:

print(b);
print(300);

SymTable

a-->1

b-->2

c-->5


Out

1


FileTable


Heap:




ExeStack:

print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:

print(300);

SymTable

a-->1

b-->2

c-->5


Out

1

2


FileTable


Heap:




ExeStack:


SymTable

a-->1

b-->2

c-->5


Out

1

2

300


FileTable


Heap:




ExeStack:

[[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]] , fork([call(product ;  v w , fork(call(sum ;  v w)])]

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[v=2;  , w=5; ] , [call(sum ;  v*10 w , print(v);]]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=2;  , w=5; ]
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=2; 
w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

w=5; 
[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[call(sum ;  v*10 w , print(v);]
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

call(sum ;  v*10 w
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[v=a+b;  , print(v);]
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

v=a+b; 
print(v);
return()
print(v);
fork([call(product ;  v w , fork(call(sum ;  v w)])

SymTable

v-->2

w-->5


Out


FileTable


Heap:


ProcTable:

product(a,b,)-->[v=a*b;  , print(v);]

sum(a,b,)-->[v=a+b;  , print(v);]




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]] , [[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[[NewH(v1, 2) , NewH(v2, 3)] , [NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

[NewH(v1, 2) , NewH(v2, 3)]
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v1, 2)
NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable


Out


FileTable


Heap:




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

NewH(v2, 3)
[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1


Out


FileTable


Heap:

1-->2




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

[NewH(v3, 4) , NewLatch(cnt,heapReading(v2))]
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewH(v3, 4)
NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2


Out


FileTable


Heap:

1-->2

2-->3




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

NewLatch(cnt,heapReading(v2))
[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]] , [[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]) , [fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]])
[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]) , fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])]
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

[heapWriting(v1,heapReading(v1)*10) , [print(heapReading(v1)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]])
fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

heapWriting(v1,heapReading(v1)*10)
[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->2

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

fork([heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]])
[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[print(heapReading(v1)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v2,heapReading(v2)*10) , [print(heapReading(v2)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[[Await(cnt) , print(100);] , [CountDown(cnt) , print(100);]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

print(heapReading(v1));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

heapWriting(v2,heapReading(v2)*10)
[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[heapWriting(v3,heapReading(v3)*10) , [print(heapReading(v3)); , CountDown(cnt)]]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out


FileTable


Heap:

1-->20

2-->3

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[Await(cnt) , print(100);]
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

[print(heapReading(v2)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

heapWriting(v3,heapReading(v3)*10)
[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20


FileTable


Heap:

1-->20

2-->30

3-->4




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v2));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[print(heapReading(v3)); , CountDown(cnt)]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(heapReading(v3));
CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

Await(cnt)
print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);
[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

[CountDown(cnt) , print(100);]

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

CountDown(cnt)
print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

print(100);

SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:


SymTable

cnt-->1

v1-->1

v2-->2

v3-->3


Out

20

2

30

3

40

4

100

100


FileTable


Heap:

1-->20

2-->30

3-->40




ExeStack:

v=0; 

SymTable


Out


FileTable


Heap:




ExeStack:


SymTable

v-->0


Out


FileTable


Heap:




ExeStack:

fork([print(v); , v=v-1; ])

SymTable


Out


FileTable


Heap:




ExeStack:


SymTable


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable


Out


FileTable


Heap:




ExeStack:

[print(v); , v=v-1; ]

SymTable


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable


Out


FileTable


Heap:




ExeStack:

print(v);
v=v-1; 

SymTable


Out


FileTable


Heap:



